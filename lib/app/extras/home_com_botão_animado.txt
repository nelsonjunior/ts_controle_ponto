import 'package:flushbar/flushbar.dart';
import 'package:flutter/material.dart';
import 'package:ts_controle_ponto/app/shared/themes/colors.dart';
import 'package:ts_controle_ponto/app/shared/utils/data_utils.dart';

import 'components/barra_principal.dart';
import 'components/indicador_jornada.dart';

class HomeScreen extends StatefulWidget {
  @override
  _HomeScreenState createState() => _HomeScreenState();
}

class _HomeScreenState extends State<HomeScreen>
    with SingleTickerProviderStateMixin {
  AnimationController _iconAnimationController;

  final GlobalKey<ScaffoldState> _scaffoldKey = new GlobalKey<ScaffoldState>();
  final Duration animationDurationPadrao = Duration(milliseconds: 600);

  int currentPage = 1;

  @override
  void initState() {
    _iconAnimationController =
        AnimationController(vsync: this, duration: Duration(milliseconds: 500));
    super.initState();
  }

  @override
  void dispose() {
    _iconAnimationController.dispose();
    super.dispose();
  }

  void onIconPressed() {
    if (!animationStatus) {
      _iconAnimationController.forward();

      showInfoFlushbar(_scaffoldKey.currentContext);

      Future.delayed(animationDurationPadrao).then((_) {
        _iconAnimationController.reverse();
      });
    }
  }

  void showInfoFlushbar(BuildContext context) {
    Flushbar(
        message: "Marcação Registrada!",
        icon: Icon(
          Icons.info_outline,
          size: 28.0,
          color: corPrincipal1,
        ),
        animationDuration: animationDurationPadrao,
        duration: Duration(seconds: 2),
        margin: EdgeInsets.only(left: 10.0, right: 10.0, bottom: 100.0),
        borderRadius: 8,
        backgroundGradient: LinearGradient(
          colors: [corPrincipal, corPrincipal1],
        ))
      ..show(context);
  }

  bool get animationStatus {
    final AnimationStatus status = _iconAnimationController.status;
    return status == AnimationStatus.completed;
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      key: _scaffoldKey,
      body: Stack(
        children: <Widget>[
          Column(
            crossAxisAlignment: CrossAxisAlignment.center,
            children: <Widget>[
              BarraPrincipal(),
              IndicadorJornada(),
              SizedBox(
                height: 16.0,
              ),
              Container(
                alignment: Alignment.centerLeft,
                padding: EdgeInsets.symmetric(horizontal: 16.0),
                child: Text(
                  "Últimas marcações",
                  style: TextStyle(
                      fontSize: 16.0,
                      fontWeight: FontWeight.w500,
                      color: Colors.black87),
                ),
              ),
              Expanded(
                child: ListView(
                  scrollDirection: Axis.vertical,
                  children: <Widget>[
                    _buildItemMarcacao(DateTime.now()),
                    _buildItemMarcacao(DateTime.now()),
                    _buildItemMarcacao(DateTime.now()),
                  ],
                ),
              ),
            ],
          ),
          Positioned(
            bottom: 30,
            left: 0,
            right: 0,
            child: Container(
              alignment: Alignment.bottomCenter,
              decoration: BoxDecoration(
                  shape: BoxShape.circle,
                  border: Border.all(color: Colors.red, width: 4.0)),
              child: IconButton(
                  icon: AnimatedIcon(
                      icon: AnimatedIcons.add_event,
                      color: Colors.red,
                      progress: _iconAnimationController.view),
                  onPressed: () {
                    onIconPressed();
                  }),
            ),
          ),
        ],
      ),
    );
  }

  Widget _buildItemMarcacao(DateTime dataMarcacao) {
    return Padding(
      padding: const EdgeInsets.symmetric(horizontal: 16.0),
      child: Row(
        mainAxisAlignment: MainAxisAlignment.spaceAround,
        mainAxisSize: MainAxisSize.max,
        children: <Widget>[
          Text(
            "Entrada",
            style: TextStyle(
                color: Colors.grey,
                fontStyle: FontStyle.italic,
                fontSize: 16.0),
          ),
          SizedBox(
            width: 10.0,
          ),
          Text(
            formatarHora.format(dataMarcacao),
            style: TextStyle(
                color: Colors.blue,
                fontWeight: FontWeight.bold,
                fontSize: 20.0),
          ),
          SizedBox(
            width: 30.0,
          ),
          Text(
            "Saída",
            style: TextStyle(
                color: Colors.grey,
                fontStyle: FontStyle.italic,
                fontSize: 16.0),
          ),
          SizedBox(
            width: 10.0,
          ),
          Text(
            formatarHora.format(dataMarcacao),
            style: TextStyle(
                color: Colors.blue,
                fontWeight: FontWeight.bold,
                fontSize: 20.0),
          )
        ],
      ),
    );
  }
}
